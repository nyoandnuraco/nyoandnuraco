{"version":3,"sources":["webpack:///./src/pages/shoppingcartpage.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js"],"names":["Type","productCallBack","order","index","a","updatedProducts","state","products","currImg","setState","typeCallBack","changedType","type","props","ShoppingCart","items","length","className","id","ProductDisplay","componentDidMount","productList","map","push","quantity","render","this","Display","image","key","React","Component","src","alt","name","description","ShoppingCartPage","handleClick","e","target","value","cart","bind","style","backgroundColor","height","width","float","onClick","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"component---src-pages-shoppingcartpage-js-69f60ec499d208b39ef8.js","sourcesContent":["import React from 'react'\nimport Neldo from '../pages/shop/neldo'\n//import web from '../pages/web.jpg'\nconst Type =[\"Neldo Light Package\", \"Neldo Package\", \"Neldo Champ Package\"];\nconst Package=[\"n\",\"nl\",\"nc\"];\nlet cartList;\nexport const productCallBack = async (order, index) => {\n    let updatedProducts = this.state.products;\n    const currImg = updatedProducts[index].currImg;\n    updatedProducts[index] = {currImg, order};\n    await this.setState({products:updatedProducts});\n}\nexport const typeCallBack = (changedType) => {\n    this.setState({\n        type:changedType\n    })\n    this.props.productCallBack(this.state, this.props.index)\n}\nexport const ShoppingCart = (props) => {\n \n    if(props.items.length === 0){\n        return(\n            <div className=\"scEmptyCart\">\n                Nothing In Cart\n            </div>\n        )\n    } else\n        return(\n            <div className=\"scShoppingCart\" id=\"shoppingCartScroll\">\n                <div>Your Items</div>\n        <p>{props.items.length}</p>\n        <ProductDisplay items={props.items}/>\n            </div>\n        )\n    \n}\n\nexport class ProductDisplay extends React.Component{    \n\ncomponentDidMount = async () => {\n    let productList = [];\n    await this.props.items.map((currImg) => productList.push({currImg, order: {type:Type[0], quantity: 1}}))\n    this.setState({products:productList})\n}\n\nrender(){\n   \n    return (cartList = this.props.items.map((currImg, index)=> <Display image={currImg} index={index} key={index} productCallBack={this.productCallBack}/>))\n}\n}\n\nexport class Display extends React.Component{\n    render(){\n \n        return(\n            <div key={this.props.index}>\n                <figure>\n                    <img src={this.props.image.src} alt={this.props.image.name} id={this.props.index}/>\n                </figure>\n                <form>\n                  \n                    <table>\n                        <tbody>\n                            <tr>\n                                <td><b>Image Description:</b></td>\n                                <td>{this.props.image.description}</td>\n                            </tr>\n                           \n                        </tbody>\n                    </table>\n                </form>\n            </div>\n        )\n    }\n}\n\nclass ShoppingCartPage extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            cart:0,\n            type:'Neldo Package'\n        }\n        this.handleClick = this.handleClick.bind(this);\n      \n    }\n\n\nhandleClick = async (e) => {\n    await this.setState({type: e.target.value});\nthis.props.typeCallBack(this.state.type)\n}\n \n    render(){\n    \n        const scpcart = {\n            backgroundColor: \"purple\",\n            height: \"100vh\",\n            width:\"44vw\",\n            float:\"right\",\n        }\n        return(\n            <section style={scpcart}>\n                <ShoppingCart items={[this.state.type]}/>\n                <h3>{this.state.type}</h3>\n                <button value=\"Neldo Light Package\" onClick={(e)=>this.handleClick(e)}>Add to Cart</button>\n                <button value=\"Neldo Package\" onClick={(e)=>this.handleClick(e)}>Add to Cart</button>\n                <button value=\"Neldo Champ Package\" onClick={(e)=>this.handleClick(e)}>Add to Cart</button>\n              \n            </section>\n        )\n    }\n}\n\nexport default ShoppingCartPage\n\n","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","module.exports = require(\"regenerator-runtime\");\n"],"sourceRoot":""}